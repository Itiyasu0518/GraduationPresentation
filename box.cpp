//==================================================================================================================
//
// box[box.cpp]
// Author:Ryouma Inoue
//
//==================================================================================================================
#include "manager.h"
#include "renderer.h"
#include "Box.h"
#include "inputKeyboard.h"
#include "player.h"
#include "game.h"
#include "scene2D.h"

//==================================================================================================================
// マクロ定義
//==================================================================================================================
#define WhileX 50.0f																// イチマスの長さ横
#define WhileY 50.0f																// イチマスの長さ高さ
#define WhileZ 50.0f																// イチマスの長さ縦

//==================================================================================================================
// 静的メンバ変数の初期化
//==================================================================================================================
LPDIRECT3DTEXTURE9 CBox::m_pTexture[CBox::TEX_TYPE_MAX] = {};			// テクスチャ変数

//==================================================================================================================
// グローバル変数
//==================================================================================================================

//==================================================================================================================
// コンストラクタ
//==================================================================================================================
CBox::CBox(PRIORITY type = CScene::PRIORITY_FLOOR) :CScene(type)
{

}

//==================================================================================================================
// デストラクタ
//==================================================================================================================
CBox::~CBox()
{

}

//==================================================================================================================
// 初期化処理
//==================================================================================================================
HRESULT CBox::Init(void)
{
	for (int nCntDepth = 0; nCntDepth < Box_Depth; nCntDepth++)
	{
		for (int nCntWidth = 0; nCntWidth < Box_Width; nCntWidth++)
		{
			m_pBlock[nCntDepth][nCntWidth] = CScene2D::Create(PRIORITY_UI);

			if (m_pBlock[nCntDepth][nCntWidth] != NULL)
			{
				m_pBlock[nCntDepth][nCntWidth]->SetPosition(D3DXVECTOR3(100.0f + nCntWidth * 55.0f,
					100.0f + nCntDepth * 55.0f,
					0.0f));
				m_pBlock[nCntDepth][nCntWidth]->SetSize(D3DXVECTOR3(50.0f, 50.0f,0.0f));
				m_pBlock[nCntDepth][nCntWidth]->SetTransform();
			}
		}
	}
	return S_OK;
}

//==================================================================================================================
// 終了処理
//==================================================================================================================
void CBox::Uninit(void)
{

}

//==================================================================================================================
// 更新処理
//==================================================================================================================
void CBox::Update(void)
{
	VERTEX_2D *m_pVtx;

	// キーボード取得
	CInputKeyboard *pInputKeyboard = CManager::GetInputKeyboard();

	// 縦をカウント
	for (int nDepth = 0; nDepth < Box_Depth + 1; nDepth++)
	{
		// 横をカウント
		for (int nWide = 0; nWide < Box_Width + 1; nWide++)
		{

			if (nDepth == 0 && nWide == 0)
			{
				m_bPuzzle[3][3] = true;
				m_pBlock[3][3]->BindTexture(CManager::GetResource("data/tex/grass.jpg"));
			}
			else if (nDepth == 0 && nWide == 1)
			{
				m_bPuzzle[3][4] = true;
				m_pBlock[3][4]->BindTexture(CManager::GetResource("data/tex/grass.jpg"));
			}
			else if (nDepth == 1 && nWide == 0)
			{
				m_bPuzzle[4][3] = true;
				m_pBlock[4][3]->BindTexture(CManager::GetResource("data/tex/grass.jpg"));
			}
			else if (nDepth == 1 && nWide == 1)
			{
				m_bPuzzle[4][4] = true;
				m_pBlock[4][4]->BindTexture(CManager::GetResource("data/tex/grass.jpg"));
			}


			//if (m_bPuzzle[nDepth][nWide] == true)
			//{
			//	m_type[nDepth][nWide] = TEX_TYPE_MASU;
			//	//m_pVtx[0].col = D3DXCOLOR(1.0f, 0.0f, 0.0f, 1.0f);
			//	//m_pVtx[0].tex = D3DXVECTOR2(1.0f * nWide, 1.0f * nDepth);
			//}
			//else
			//{
			//	m_type[nDepth][nWide] = TEX_TYPE_NORMAL;
			//}
			//m_pVtx[0].col = D3DXCOLOR(1.0f, 0.0f, 0.0f, 1.0f);
		}
	}
}

//==================================================================================================================
// 描画処理
//==================================================================================================================
void CBox::Draw(void)
{

}

//==================================================================================================================
// ポリゴン生成
//==================================================================================================================
CBox *CBox::Create(void)
{
	// シーン動的に確保
	CBox *pBox = new CBox(CScene::PRIORITY_FLOOR);

	if (pBox != NULL)
	{
		// シーン初期化
		pBox->Init();
	}

	// 値を返す
	return pBox;
}

//==================================================================================================================
// テクスチャ情報ロード
//==================================================================================================================
HRESULT CBox::Load(void)
{
	CRenderer *pRenderer = CManager::GetRenderer();						// レンダラーの情報取得
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();					// デバイスを取得する

	m_pTexture[TEX_TYPE_NORMAL] = CManager::GetResource("data/tex/SignBoard3.png");
	m_pTexture[TEX_TYPE_MASU] = CManager::GetResource("data/tex/grass.jpg");

	return S_OK;
}

//==================================================================================================================
// テクスチャ情報破棄
//==================================================================================================================
void CBox::Unload(void)
{
	// テクスチャの開放

}