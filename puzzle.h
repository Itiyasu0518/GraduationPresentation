//=============================================================================
//
// パズル処理 [puzzle.h]
// Author : masayasu wakita
//
//=============================================================================
#ifndef _PUZZLE_H_
#define _PUZZLE_H_

//=============================================================================
// インクルードファイル
//=============================================================================
#include "main.h"
#include "box.h"

//=============================================================================
// 前方宣言
//=============================================================================
class CBox;

//=============================================================================
// クラス定義
//=============================================================================
class CPuzzle
{
public:
	CPuzzle();					// コンストラクタ
	~CPuzzle();					// デストラクタ
	HRESULT Init(void);			// 初期化処理
	void Uninit(void);			// 開放処理
	void Update(void);			// 更新処理
	void Draw(void);			// 描画処理

	static void	LoadAsset(void);												// アセットの読み込み処理
	static float GetSpeed(int nPieceNum) { return m_fSpeed[nPieceNum]; }		// スピードの取得
	static int GetPieceNum(void) { return m_nPieceNum; }						// ピース数

private:
	CBox *m_pBox;								// ボックスのポインタ

	static float m_fSpeed[Piece_Num];			// スピード
	static int m_nPieceNum;						// ピース数

};
#endif